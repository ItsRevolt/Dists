"use strict";var ping={name:"ping",description:"Ping!",execute(e,n){console.log("received"),e.channel.send("Pong.")}},echo={name:"echo",description:"Get message content and sends it back",execute(e,n){e.channel.send(e.content)}},consola=require("consola");function setActivity(e,n){e.client.user.setActivity(n,{type:"LISTENING"}).catch(console.error)}const fs=require("fs"),ytdl=require("ytdl-core"),consola$1=require("consola");var YouTube=require("youtube-node");const low=require("lowdb"),FileSync=require("lowdb/adapters/FileSync"),adapter=new FileSync("db.json"),db=low(adapter);var SpotifyWebApi=require("spotify-web-api-node"),clientID=db.get("spotify.clientID").value(),clientSecret=db.get("spotify.clientSecret").value(),spotifyApi=new SpotifyWebApi({clientId:clientID,clientSecret:clientSecret});console.log(clientID),spotifyApi.clientCredentialsGrant().then(function(e){console.log("The access token expires in "+e.body.expires_in),console.log("The access token is "+e.body.access_token),spotifyApi.setAccessToken(e.body.access_token)},function(e){console.log("Something went wrong when retrieving an access token",e)});var youTube=new YouTube;youTube.setKey("AIzaSyA1xXaVNquNgxrStmjdkSXX4vEiKTTGneY");var param,res,title,queue=[];function resetQueue(){return queue=[]}var play={name:"play",description:"Plays audio from several sources!",args:!0,usage:"<url> or <search query>",execute(e,n,t){function o(n){youTube.search(n,1,function(n,t){if(n)e.reply(n);else{var o=t.items[0].id.videoId;console.log(o),ytdl.getInfo(o,(n,t)=>{if(n)return e.reply(n);queue.push(t.video_url),title=t.title,e.channel.send(`**[${queue.length}]**-${t.title}`),1===queue.length&&r()})}})}async function r(){var n;console.log("execute");const o=t.voiceConnections.find(n=>n.channel.guild.id==e.guild.id);if(!(Array.isArray(queue)&&queue.length||null===o))return o.disconnect(),setActivity(e,"Nothing"),e.channel.send("```Done playing Song(s)```");n=null===o?await e.member.voiceChannel.join():o;var i=queue[0],s=ytdl(i,{filter:"audioonly"}),a=n.playStream(s);ytdl.getInfo(i,(n,t)=>{setActivity(e,t.title)}),a.on("end",()=>{setTimeout(()=>{queue.length>0?(queue.shift(),r()):setActivity(e,"Nothing")},1e3)})}param=n[0],res=n.join().replace(","," "),function(){if(console.log("arg0: "+n[0]+"arg1: "+n[1]),!e.guild)return;if(!e.member.voiceChannel)return e.reply("```You are not in a channel! :thermometer_face:```");if(!param)return e.reply("```Make sure to enter a search term!```");if(param.indexOf("youtu.be")>-1||param.indexOf("youtube.com")>-1)queue.push(param),1===queue.length&&(console.log("called execute que from top"),r()),queue.length>=1&&(console.log("called get info"),ytdl.getInfo(param).then(n=>{e.reply(`**[${queue.length}]**-${n.title}`)}));else if("spotify"==n[0].toLowerCase()){if(!db.has("spotify.clientID").value()&&!db.has("spotify.clientSecret").value())return e.reply("It appears that the server owner has not configured Spotify. Please bug that person.");if(25!==n[1].length)return e.reply("Invalid user ID!");if(22!==n[2].length)return e.reply("Invalid playlist ID!");var t;t=n[3]?"all"==n[3]?100:n[3]:25,spotifyApi.getPlaylistTracks(n[1],n[2],{offset:1,limit:t,fields:"items(track(name,artists))"}).then(function(e){for(var n in console.log(JSON.stringify(e)),e.body.items)console.log(e.body.items[n].track.name);for(var n in e.body.items){var t=e.body.items[n].track.name,r=e.body.items[n].track.artists[0].name;o(`${t} - ${r} audio`)}},function(n){return e.reply("Error: "+n)})}else console.log("trying to search"),o(res)}()}};const fs$1=require("fs"),ytdl$1=require("ytdl-core");var queue$1={name:"queue",description:"Shows audio queue",execute(e,n,t){if(0==queue.length)return e.channel.send("Nothing in queue bud");queue.reverse().map(n=>ytdl$1.getInfo(n).then(t=>setTimeout(()=>{e.channel.send(`\n**[${queue.indexOf(n)}]** - ${t.title}\n`)},300)))}};const fs$2=require("fs"),ytdl$2=require("ytdl-core");var skip={name:"skip",description:"Skips to next song in queue",execute(e,n,t){if(0===queue.length)return e.reply("You cannot skip a non-existent song! :raised_hands::skin-tone-5:");var o=Math.min(1,queue.length);queue.splice(0,o-1);var r=t.voiceConnections.find(n=>n.channel.guild.id==e.guild.id);const i=r.player.dispatcher;r.paused&&i.resume(),i.end(),e.reply("**Skipped!** :ok_hand::skin-tone-5:")}};const fs$3=require("fs"),ytdl$3=require("ytdl-core");var stop={name:"stop",description:"Stops all audio playing, removes all in queue, and doesnt continue queue",execute(e,n,t){resetQueue();var o=t.voiceConnections.find(n=>n.channel.guild.id==e.guild.id);if(!o)return;const r=o.player.dispatcher;o.paused&&r.resume(),r.end(),o.disconnect(),e.reply("**Stopped!** :ok_hand::skin-tone-5: ")}},fuck={name:"fuck",description:"Sends a fuck you to the person of choice",args:!0,usage:"<thing>",execute(e,n){var t=n[0],o=Math.random();o<.5?e.channel.send(`Yeah, fuck **${t}**`):o<.7?e.reply("No, fuck you"):e.channel.send(`Yeah, fuck **${t}**`)}};const path=require("path"),consola$2=require("consola");let Files=[ping,echo,play,skip,queue$1,stop,fuck];function init(e,n){for(const n of Files)consola$2.success("Loaded: "+n.name),e.commands.set(n.name,n);e.on("message",t=>{if(consola$2.info(`${t.author.username} Posted: '${t.content}' - ${t.createdTimestamp}`),"prefix"===t.content&&t.channel.send(`Prefix is: '**${n}**'`),!t.content.startsWith(n)||t.author.bot)return;const o=t.content.slice(n.length).split(/ +/),r=o.shift().toLowerCase();if(r.args&&!o.length){let e=`You didn't provide any arguments, ${t.author}!`;return r.usage&&(e+=`\nThe proper usage would be: \`${n}${r.name} ${r.usage}\``),t.channel.send(e)}if(e.commands.has(r))try{e.commands.get(r).execute(t,o,e)}catch(e){consola$2.error(e),t.reply("there was an error trying to execute that command!")}}),process.on("unhandledRejection",e=>console.error(`Uncaught Promise Rejection:\n${e}`))}const fs$4=require("fs"),Discord=require("discord.js"),consola$3=require("consola"),client=new Discord.Client;client.commands=new Discord.Collection;const low$1=require("lowdb"),FileSync$1=require("lowdb/adapters/FileSync"),adapter$1=new FileSync$1("db.json"),db$1=low$1(adapter$1);var prefix=db$1.get("prefix").value(),token=db$1.get("token").value();function login(){init(client,prefix),client.login(token),client.on("ready",()=>{consola$3.success("Bot Started Successfully")})}var inquirer=require("inquirer");const consola$4=require("consola"),low$2=require("lowdb"),FileSync$2=require("lowdb/adapters/FileSync"),adapter$2=new FileSync$2("db.json"),db$2=low$2(adapter$2);let questions=[{type:"input",name:"token",message:"What's your bots token?",validate:function(e){return null!==e||"string"!==e||"Please enter a valid token"}},{type:"input",name:"prefix",message:"What's prefix to get bots attention?",default:"!",validate:function(e){return null!==e||"string"!==e?e.length<=5||"Prefix must not be longer than 5 characters":"Please enter a valid prefix"}},{type:"input",name:"admingroup",message:"What is the admin group called on your server?",default:"Admin",validate:function(e){return null!==e||"string"!==e||"Please enter a valid admin group"}},{type:"input",name:"moderatorgroup",message:"What is the moderator group called on your server?",default:"Moderator",validate:function(e){return null!==e||"string"!==e||"Please enter a valid moderator group"}}];function cli(){inquirer.prompt(questions).then(e=>{db$2.set("token",e.token).write(),db$2.set("firstrun",!1).write(),db$2.set("prefix",e.prefix).write(),db$2.set("admingroup",e.admingroup).write(),db$2.set("moderatorgroup",e.moderatorgroup).write(),consola$4.success(`Your bot has been created with token: ${e.token}`),consola$4.info('To start your bot, type "node dists.js"'),consola$4.info("To add the bot to your guild, follow this link (REPLACE CLIENT_ID_HERE WITH THE ONE FROM YOUR BOT):https://discordapp.com/api/oauth2/authorize?client_id=CLIENT_ID_HERE&permissions=8&scope=bot")})}const low$3=require("lowdb"),FileSync$3=require("lowdb/adapters/FileSync"),adapter$3=new FileSync$3("db.json"),db$3=low$3(adapter$3);db$3.defaults({commandAliases:[],admingroup:"",moderatorgroup:"",permissions:[],firstrun:!0,prefix:"",spotify:{clientID:"",clientSecret:""}}).write();var firstrun=db$3.get("firstrun").value();1==firstrun?cli():login();
